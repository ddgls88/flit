buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath('org.eclipse.jgit:org.eclipse.jgit:4.6.0.201612231935-r')
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id "com.jfrog.bintray" version "1.8.4"
}

group 'com.flit'

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    bintray {
        user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
        key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

        publish = true
        override = true

        publications = ['PubBintray']

        pkg {
            repo = 'mvn'
            name = rootProject.name
            userOrg = 'chaos-systems'
            licenses = ['Apache-2.0']
            vcsUrl = 'https://github.com/github/flit'
        }
    }
}

import org.eclipse.jgit.lib.Repository
import org.eclipse.jgit.storage.file.FileRepositoryBuilder

import java.time.Instant
import java.time.ZoneOffset
import java.time.format.DateTimeFormatter

static def scmInfo(String path) {
    FileRepositoryBuilder builder = new FileRepositoryBuilder()
    Repository repository = builder.setGitDir(new File("${path}/.git"))
            .readEnvironment()
            .findGitDir()
            .build()

    def branch = repository.getBranch()
    def head = repository.resolve("HEAD")
    def revision = head == null ? "UNKNOWN" : head.name()
    def date = Instant.now().atOffset(ZoneOffset.UTC).format(DateTimeFormatter.ISO_OFFSET_DATE_TIME)
    def tstamp = Instant.now().atOffset(ZoneOffset.UTC).format(DateTimeFormatter.ofPattern("yyyyMMddHHmmssSSS"))

    return [
            branch  : branch,
            revision: revision,
            date    : date,
            tstamp  : tstamp
    ]
}

project.ext.scm = scmInfo(rootDir.getAbsolutePath())
