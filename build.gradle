buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath('org.eclipse.jgit:org.eclipse.jgit:4.6.0.201612231935-r')
    }
}

plugins {
    id 'java'
    id 'maven-publish'
}

group 'com.flit'

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = "https://maven.pkg.github.com/github"
                credentials {
                    username project.hasProperty('gpr.user') ? project.property('gpr.user') : System.getenv('GPR_USER')
                    password project.hasProperty('gpr.key') ? project.property('gpr.key') : System.getenv('GPR_API_KEY')
                }
            }
        }
        publications {
            gpr(MavenPublication) {
                pom {
                    scm {
                        connection = 'scm:git:https://github.com/github/flit.git'
                        developerConnection = 'scm:git:https://github.com/github/flit.git'
                        url = 'https://github.com/github/flit'
                    }
                }
            }
        }
    }
}

import org.eclipse.jgit.lib.Repository
import org.eclipse.jgit.storage.file.FileRepositoryBuilder

import java.time.Instant
import java.time.ZoneOffset
import java.time.format.DateTimeFormatter

static def scmInfo(String path) {
    FileRepositoryBuilder builder = new FileRepositoryBuilder()
    Repository repository = builder.setGitDir(new File("${path}/.git"))
            .readEnvironment()
            .findGitDir()
            .build()

    def branch = repository.getBranch()
    def head = repository.resolve("HEAD")
    def revision = head == null ? "UNKNOWN" : head.name()
    def date = Instant.now().atOffset(ZoneOffset.UTC).format(DateTimeFormatter.ISO_OFFSET_DATE_TIME)
    def tstamp = Instant.now().atOffset(ZoneOffset.UTC).format(DateTimeFormatter.ofPattern("yyyyMMddHHmmssSSS"))

    return [
            branch  : branch,
            revision: revision,
            date    : date,
            tstamp  : tstamp
    ]
}

project.ext.scm = scmInfo(rootDir.getAbsolutePath())
